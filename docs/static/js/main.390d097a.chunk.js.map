{"version":3,"sources":["components/Addcategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["Addcategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","categorias","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OACE,0BAAMC,SATY,SAACC,GACnBA,EAAEC,iBACuB,KAAtBJ,EAAWK,SACZP,GAAc,SAACQ,GAAD,OAAeN,GAAf,mBAA8BM,OAC5CL,EAAc,OAMd,2BACEM,KAAO,OACPC,MAASR,EACTS,SAjBmB,SAACN,GACxBF,EAAcE,EAAEO,OAAOF,Y,uBCNdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,0FACyEC,UAAUH,GADnF,+BAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QATpB,kBAYZM,GAZY,kCAenBO,QAAQC,IAAR,MAfmB,0DAAH,sDCEPC,EAAc,SAAC,GAAmB,IAAlBL,EAAiB,EAAjBA,MAAQV,EAAS,EAATA,IACnC,OACE,yBAAKgB,UAAY,0CACf,yBACEC,IAAOjB,EACPkB,IAAOR,IAET,2BAAIA,KCJGS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACdb,mBAAS,CACjCoB,KAAK,GACLe,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAWxC,OANAC,qBAAU,WACR1B,EAAQC,GACL0B,MAAM,SAAAhB,GAAG,OAAIc,EAAS,CAACjB,KAAKG,EAAKY,SAAS,SAC5C,CAACtB,IAGGuB,EDR0BI,CAAa3B,GAAjCa,EADwB,EAC7BN,KAAae,EADgB,EAChBA,QAErB,OACE,oCACE,wBAAIJ,UAAY,0CAA0ClB,GACzDsB,GAAW,uBAAGJ,UAAY,yCAAf,cACZ,yBAAKA,UAAU,aACZL,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAakB,IAAKlB,EAAIC,IAAQD,UEX3BmB,EAAe,WAAM,MAGI1C,mBAAS,CAAC,cAHd,mBAGzB2C,EAHyB,KAGb5C,EAHa,KAWhC,OACE,oCACE,6CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BACA,4BACG4C,EAAWrB,KAAI,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CACE4B,IAAK5B,EACLA,SAAYA,UClBxB+B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.390d097a.chunk.js","sourcesContent":["import React, { useState } from 'react'; \nimport PropTypes from 'prop-types';\nexport const Addcategory = ({setCategories}) => {\n  const [inputValue, setInputValue] = useState('')\n\n  const handleInputChange= (e)=> {\n    setInputValue(e.target.value)\n  }\n\n  const handleSubmit= (e) => {\n    e.preventDefault()\n    if(inputValue.trim() !== \"\"){\n      setCategories((categorias)=>[inputValue, ...categorias ])\n      setInputValue('')\n    }\n  }\n\n  return (\n    <form onSubmit = {handleSubmit}>\n      <input \n        type = \"text\"\n        value = {inputValue}\n        onChange={ handleInputChange }\n      />\n    </form>\n  )\n\n}\n\nAddcategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}","export const getGifs = async (category)=>{\n  const url= `https://api.giphy.com/v1/gifs/search?api_key=5qVfeY4vwt77q3K7QduiZKp5Gk78eXVt&q=${encodeURI(category)}&limit=10`\n  try {\n    const resp = await fetch(url)\n    const {data} = await resp.json()\n    const gifs = data.map(img => {\n      return {\n        id: img.id,\n        title: img.title,\n        url : img.images?.downsized_medium.url\n      }\n    })\n    return gifs\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n","import React from 'react'\n\nexport const GifGridItem = ({title,  url}) => {\n  return (\n    <div className = \"card animate__animated animate__fadeIn\">\n      <img\n        src = {url}\n        alt = {title}\n      />\n      <p>{title}</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n// import {getGifs} from '../helpers/getGifs'\nimport { GifGridItem } from './GifGridItem'\n\nexport const GifGrid = ({category}) => {\n  const { data:images, loading } = useFetchGifs(category)\n\n  return (\n    <>\n      <h3 className = \"card animate__animated animate__fadeIn\">{category}</h3>\n      {loading && <p className = \"card animate__animated animate__flash\">'Cargando'</p>}\n      <div className=\"card-grid\">\n        {images.map((img) => \n          <GifGridItem key={img.id} {...img} />)\n        }\n      </div>\n    </>\n  )\n}\n","import {useState, useEffect} from 'react'\nimport {getGifs} from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data:[],\n    loading: true\n  })\n  useEffect(() => {\n    getGifs(category)\n      .then( img => setState({data:img, loading: false}))\n  }, [category])\n\n\n  return state\n}\n","import React, {useState} from 'react';\nimport { Addcategory } from './components/Addcategory';\nimport {GifGrid} from './components/GifGrid';\nexport const GifExpertApp = () => {\n  \n  // const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\n  const [categories, setCategories] = useState(['One Punch'])\n  \n  // const handleAdd = (e) => {\n  //   setCategories(\n  //     [...categories, 'wonder woman']\n  //   )\n  // }\n  \n  return (\n    <>\n      <h2>GiffExpertApp</h2>\n      <Addcategory setCategories = {setCategories}/>\n      <hr/>\n      <ol>\n        {categories.map(category => \n          <GifGrid \n            key={category} \n            category = {category}\n          />)\n        }\n      </ol>\n    </>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}